{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","errorReducer","action","projectReducer","filter","project_tasks","project_task","booleanActionPayload","combineReducers","backlog","projectSequence","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","console","log","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43b13a40.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { Component } from \"react\";\r\n// import Header from \"./Layout/Header\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n    //  console.log(newProject);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          //check name attribute input fields\r\n          //create constructor\r\n          //set state\r\n          //set value on input fields\r\n          //create onChange function\r\n          //set onChange on each input field\r\n          //bind on constructor\r\n          //check state change in the react extension\r\n        }\r\n\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      value={this.state.endDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\n/*\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n*/\r\nconst errorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default errorReducer;\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\n/*\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}  */\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default projectReducer;\r\n\r\n/*\r\nexport const getProject = (id, history) => async dispatch => {\r\n  const res = await axios.get(`http://localhost:8080/api/project/${id}`);\r\n  dispatch({\r\n    type: GET_PROJECT,\r\n    payload: res.data\r\n  });\r\n};\r\n*/\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {},\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const addProjectTask =\r\n  (backlog_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask =\r\n  (backlog_id, pt_id, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n\r\nexport const updateProjectTask =\r\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      console.log(tasks[i]);\r\n\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    //handle logout\n    //window.location.href = \"/\";\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}